<dataroot>
  <MessageDesc>
    <MsgType>j</MsgType>
    <Description>
      The Business Message Reject message can reject an application-level message which fulfills session-level rules and cannot be rejected via any other means. Note if the message fails a session-level rule (e.g. body length is incorrect), a session-level Reject message should be issued.
      The only exception to this rule is when a transport other than the FIX session protocol is being used (transport independence). An appropriate reject message of the given session protocol or the Business Message Reject message should be used instead.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BC</MsgType>
    <Description>
      This message is send either immediately after logging on to inform a network (counterparty system) of the type of updates required or to at any other time in the FIX conversation to change the nature of the types of status updates required. It can also be used with a NetworkRequestType of Snapshot to request a one-off report of the status of a network (or counterparty) system. Finally this message can also be used to cancel a request to receive updates into the status of the counterparties on a network by sending a NetworkRequestStatusMessage with a NetworkRequestType of StopSubscribing.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BD</MsgType>
    <Description>
      This message is sent in response to a Network (Counterparty System) Status Request Message.
      If the network response payload is larger than the maximum permitted message size for that FIX conversation the response would be several Network Status Response Messages the first with a status of full and then as many messages, as updates to the first message, adding information as required.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BE</MsgType>
    <Description>
      This message is used to initiate a user action, logon, logout or password change. It can also be used to request a report on a user’s status.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BF</MsgType>
    <Description>
      This message is used to respond to a user request message, it reports the status of the user after the completion of any action requested in the user request message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>CB</MsgType>
    <Description>
      The User Notification message is used to notify one or more users of an event or information from the sender of the message. This message is usually sent unsolicited from a marketplace (e.g. Exchange, ECN) to a market participant.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BW</MsgType>
    <Description>
      This message is used to request a retransmission of a set of one or more messages generated by the application specified in RefApplID (1355). The message can be used for five types of transmission requests:
      0 - retransmission of application messages for a specified application and sequence number range,
      1 - subscription to an application in order receive, for example, drop copy services,
      2 - request for the last application sequence number sent by an application,
      3 - request the valid set of application identifiers for which a user is authorized,
      4 - unsubscribe to one or more of applications
      The Request message specifies the sequence number range using ApplBegSeqNum (1182) and ApplEndSeqNum (1183) for a given RefApplID (1355) to request messages for retransmission.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BX</MsgType>
    <Description>
      This message is used to acknowledge an Application Message Request providing a status on the request (i.e. whether successful or not). This message does not provide the actual content of the messages to be resent.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>BY</MsgType>
    <Description>
      This message is used for three different purposes: to reset the ApplSeqNum (1181) of a specified ApplID (1180). to indicate that the last message has been sent for a particular ApplID, or as a keep-alive mechanism for ApplIDs with infrequent message traffic. The purpose of the Application Message Report is indicated by ApplReportType (1426).
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>0</MsgType>
    <Description>
      The Heartbeat monitors the status of the communication link and identifies when the last of a string of messages was not received.
      When either end of a FIX connection has not sent any data for HeartBtInt seconds, it will transmit a Heartbeat message. When either end of the connection has not received any data for (HeartBtInt + “some reasonable transmission time”) seconds, it will transmit a Test Request message. If there is still no Heartbeat message received after (HeartBtInt + “some reasonable transmission time”) seconds then the connection should be considered lost and corrective action be initiated. If HeartBtInt is set to zero then no regular heartbeat messages will be generated. Note that a test request message can still be sent independent of the value of the HeartBtInt, which will force a Heartbeat message.
      Heartbeats issued as the result of Test Request must contain the TestReqID transmitted in the Test Request message. This is useful to verify that the Heartbeat is the result of the Test Request and not as the result of a regular timeout.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>A</MsgType>
    <Description>
      The logon message authenticates a user establishing a connection to a remote system. The logon message must be the first message sent by the application requesting to initiate a FIX session.
      The HeartBtInt (108) field is used to declare the timeout interval for generating heartbeats (same value used by both sides). The HeartBtInt value should be agreed upon by the two firms and specified by the Logon initiator and echoed back by the Logon acceptor.
      Upon receipt of a Logon message, the session acceptor will authenticate the party requesting connection and issue a Logon message as acknowledgment that the connection request has been accepted. The acknowledgment Logon can also be used by the initiator to validate that the connection was established with the correct party.
      The session acceptor must be prepared to immediately begin processing messages after receipt of the Logon. The session initiator can choose to begin transmission of FIX messages before receipt of the confirmation Logon, however it is recommended that normal message delivery wait until after the return Logon is received to accommodate encryption key negotiation.
      The confirmation Logon can be used for encryption key negotiation. If a session key is deemed to be weak, a stronger session key can be suggested by returning a Logon message with a new key. This is only valid for encryption protocols that allow for key negotiation. (See the FIX Web Site’s Application notes for more information on a method for encryption and key passing.)
      The Logon message can be used to specify the MaxMessageSize supported (i.e. can be used to control fragmentation rules for very large messages which support fragmentation). It can also be used to specify the MsgTypes supported for both sending and receiving.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>1</MsgType>
    <Description>
      The test request message forces a heartbeat from the opposing application. The test request message checks sequence numbers or verifies communication line status. The opposite application responds to the Test Request with a Heartbeat containing the TestReqID.
      The TestReqID verifies that the opposite application is generating the heartbeat as the result of Test Request and not a normal timeout. The opposite application includes the TestReqID in the resulting Heartbeat. Any string can be used as the TestReqID (one suggestion is to use a timestamp string).
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>2</MsgType>
    <Description>
      The resend request is sent by the receiving application to initiate the retransmission of messages. This function is utilized if a sequence number gap is detected, if the receiving application lost a message, or as a function of the initialization process.
      The resend request can be used to request a single message, a range of messages or all messages subsequent to a particular message.
      Note: the sending application may wish to consider the message type when resending messages; e.g. if a new order is in the resend series and a significant time period has elapsed since its original inception, the sender may not wish to retransmit the order given the potential for changed market conditions. (The Sequence Reset-GapFill message is used to skip messages that a sender does not wish to resend.)
      Note: it is imperative that the receiving application process messages in sequence order, e.g. if message number 7 is missed and 8-9 received, the application should ignore 8 and 9 and ask for a resend of 7-9, or, preferably, 7-0 (0 represents infinity). This latter approach is strongly recommended to recover from out of sequence conditions as it allows for faster recovery in the presence of certain race conditions when both sides are simultaneously attempting to recover a gap.
      • To request a single message: BeginSeqNo = EndSeqNo
      • To request a range of messages: BeginSeqNo = first message of range, EndSeqNo = last message of range
      • To request all messages subsequent to a particular message: BeginSeqNo = first message of range, EndSeqNo = 0 (represents infinity) .
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>3</MsgType>
    <Description>
      The reject message should be issued when a message is received but cannot be properly processed due to a session-level rule violation. An example of when a reject may be appropriate would be the receipt of a message with invalid basic data which successfully passes de-encryption, CheckSum and BodyLength checks. As a rule, messages should be forwarded to the trading application for business level rejections whenever possible.
      Rejected messages should be logged and the incoming sequence number incremented.
      Note: The receiving application should disregard any message that is garbled, cannot be parsed or fails a data integrity check. Processing of the next valid FIX message will cause detection of a sequence gap and a Resend Request will be generated. Logic should be included in the FIX engine to recognize the possible infinite resend loop, which may be encountered in this situation.
      Generation and receipt of a Reject message indicates a serious error that may be the result of faulty logic in either the sending or receiving application.
      If the sending application chooses to retransmit the rejected message, it should be assigned a new sequence number and sent with PossResend=Y.
      Whenever possible, it is strongly recommended that the cause of the failure be described in the Text field (e.g. INVALID DATA - FIELD 35).
      If an application-level message received fulfills session-level rules, it should then be processed at a business message-level. If this processing detects a rule violation, a business-level reject should be issued. Many business-level messages have specific “reject” messages, which should be used. All others can be rejected at a business-level via the Business Message Reject message. See Volume 1: "Business Message Reject" message.
      Note that in the event a business message is received, fulfills session-level rules, however, the message cannot be communicated to the business-level processing system, a Business Message Reject with BusinessRejectReason = “Application not available at this time” should be issued.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>4</MsgType>
    <Description>
      The Sequence Reset message has two modes: Gap Fill mode and Reset mode.
      Gap Fill mode
      Gap Fill mode is used in response to a Resend Request when one or more messages must be skipped over for the following reasons:
      • During normal resend processing, the sending application may choose not to send a message (e.g. an aged order).
      • During normal resend processing, a number of administrative messages are skipped and not resent (such as Heart Beats, Test Requests).
      Gap Fill mode is indicated by GapFillFlag (tag 123) field = "Y".
      If the GapFillFlag field is present (and equal to "Y"), the MsgSeqNum should conform to standard message sequencing rules (i.e. the MsgSeqNum of the Sequence Reset GapFill mode message should represent the beginning MsgSeqNum in the GapFill range because the remote side is expecting that next message sequence number).
      Reset mode
      Reset mode involves specifying an arbitrarily higher new sequence number to be expected by the receiver of the Sequence Reset-Reset message, and is used to reestablish a FIX session after an unrecoverable application failure.
      Reset mode is indicated by the GapFillFlag (tag 123) field = "N" or if the field is omitted.
      If the GapFillFlag field is not present (or set to N), it can be assumed that the purpose of the Sequence Reset message is to recover from an out-of-sequence condition. In Sequence Reset - Reset mode, the MsgSeqNum in the header should be ignored (i.e. the receipt of a Sequence Reset - Reset mode message with an out of sequence MsgSeqNum should not generate resend requests). Sequence Reset – Reset should NOT be used as a normal response to a Resend Request (use Sequence Reset – Gap Fill mode). The Sequence Reset – Reset should ONLY be used to recover from a disaster situation which cannot be recovered via the use of Sequence Reset – Gap Fill. Note that the use of Sequence Reset – Reset may result in the possibility of lost messages.
      Rules for processing all Sequence Reset messages
      The sending application will initiate the Sequence Reset. The message in all situations specifies NewSeqNo to reset to as the value of the next sequence number to be expected by the message receipient immediately following the messages and/or sequence numbers being skipped.
      The Sequence Reset can only increase the sequence number. If a sequence reset is received attempting to decrease the next expected sequence number the message should be rejected and treated as a serious error. It is possible to have multiple Resend Requests issued in a row (e.g. 5 to 10 followed by 5 to 11). If sequence number 8, 10, and 11 represent application messages while the 5-7 and 9 represent administrative messages, the series of messages as result of the Resend Request may appear as Sequence Reset-GapFill mode with NewSeqNo of 8, message 8, Sequence Reset-GapFill with NewSeqNo of 10, and message 10. This could then followed by Sequence Reset-GapFill with NewSeqNo of 8, message 8, Sequence Reset-GapFill with NewSeqNo of 10, message 10, and message 11. One must be careful to ignore the duplicate Sequence Reset-GapFill mode which is attempting to lower the next expected sequence number. This can be detected by checking to see if its MsgSeqNum is less than expected. If so, the Sequence Reset-GapFill mode is a duplicate and should be discarded.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>5</MsgType>
    <Description>
      The logout message initiates or confirms the termination of a FIX session. Disconnection without the exchange of logout messages should be interpreted as an abnormal condition.
      Before actually closing the session, the logout initiator should wait for the opposite side to respond with a confirming logout message. This gives the remote end a chance to perform any Gap Fill operations that may be necessary. The session may be terminated if the remote side does not respond in an appropriate timeframe.
      After sending the Logout message, the logout initiator should not send any messages unless requested to do so by the logout acceptor via a ResendRequest.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>7</MsgType>
    <Description>
      Advertisement messages are used to announce completed transactions. The advertisement message can be transmitted in various transaction types; NEW, CANCEL and REPLACE. All message types other than NEW modify the state of a previously transmitted advertisement identified in AdvRefID.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>6</MsgType>
    <Description>
      Indication of interest messages are used to market merchandise which the broker is buying or selling in either a proprietary or agency capacity. The indications can be time bound with a specific expiration value. Indications are distributed with the understanding that other firms may react to the message first and that the merchandise may no longer be available due to prior trade.
      Indication messages can be transmitted in various transaction types; NEW, CANCEL, and REPLACE. All message types other than NEW modify the state of the message identified in IOIRefID.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>B</MsgType>
    <Description>
      The news message is a general free format message between the broker and institution. The message contains flags to identify the news item's urgency and to allow sorting by subject company (symbol). The News message can be originated at either the broker or institution side, or exchanges and other marketplace venues.
      The news message also provides the capability to support categorization of news being published. This allows the news to be filtered by the news consumer. For example:
      • Exchanges may need to provide the MarketID (1301) and MarketSegmentID (1302) so users can filter News to the segments that are of relevance for them.
      • In multi-lingual environments, news may be published in a variety of languages; a user should be able to filter out messages in irrelevant languages.
      • By providing a categorization of the News messages, users can choose how to render them in different GUIs or ignore certain categories altogether.
      Additionally the news message allows news to reference other news messages. When a message references another one, it may also need to provide the reason for the reference - e.g. an update of the previous message, a complement or simply that it is a version in another language.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      C
    </MsgType>
    <Description>
      The email message is similar to the format and purpose of the News message, however, it is intended for private use between two parties.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      R
    </MsgType>
    <Description>
      In some markets it is the practice to request quotes from brokers prior to placement of an order. The quote request message is used for this purpose. This message is commonly referred to as an Request For Quote (RFQ)
      Quotes can be requested on specific securities, on specified stipulations when specific security is not known or forex rates. The quote request message can be used to request quotes on single products or multiple products.
      Securities quotes can be requested as either market quotes or for a specific quantity and side. If OrderQty and Side are absent, a market-style quote (bid x offer, size x size) will be returned.
      In the tradeable and restricted tradeable quote models the Quote Request may be preceded by the RFQ Request message described further below.
      For tradeable quote requests it is possible to specify the time period in which the request is valid for and the time period which the resulting quote must be valid for.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      AJ
    </MsgType>
    <Description>
      The Quote Response message is used to respond to a IOI message or Quote message. It is also used to counter a Quote or end a negotiation dialog.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      AG
    </MsgType>
    <Description>
      The Quote Request Reject message is used to reject Quote Request messages for all quoting models.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      AH
    </MsgType>
    <Description>
      In tradeable and restricted tradeable quoting markets – Quote Requests are issued by counterparties interested in ascertaining the market for an instrument. Quote Requests are then distributed by the market to liquidity providers who make markets in the instrument. The RFQ Request is used by liquidity providers to indicate to the market for which instruments they are interested in receiving Quote Requests. It can be used to register interest in receiving quote requests for a single instrument or for multiple instruments
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      S
    </MsgType>
    <Description>
      The Quote message is used as the response to a Quote Request or a Quote Response message in both indicative, tradeable, and restricted tradeable quoting markets.
      In tradeable and restricted tradeable quoting models, the market maker sends quotes into a market as opposed to sending quotes directly to a counterparty.
      For Fixed Income in the indicative and tradeable quoting models, the quotes are typically sent directly to an interested counterparty as opposed to a market place. See Volume 7 – PRODUCT: FIXED INCOME for specific descriptions and usage details.
      The quote message can be used to send unsolicited quotes in both indicative, tradeable, and restricted tradeable quoting markets.
      The quote message contains a quote for a single product.
      If the issuer of the quote requires a response (i.e. notification that the quote message has been accepted) then the QuoteResponseLevel field should be populated on the quote message – the response would be made using the Quote Status Report message
      The quote should not be used in tradeable and restricted tradeable quoting markets, such as electronic trading systems, to broadcast quotes to market participants. The recommended approach to reporting market state changes that result from quotes received by a market is to use the market data messages.
      Quotes supplied as the result of a Quote Request message will specify the appropriate QuoteReqID, unsolicited quotes can be identified by the absence of a QuoteReqID.
      See VOLUME 7 - PRODUCT: FOREIGN EXCHANGE and USER GROUP: EXCHANGES AND MARKETS sections for more detailed usage notes specific to Foreign Exchange and Exchanges/Marketplaces respectively.
      Orders can be generated based on Quotes. Quoted orders include the QuoteID and are OrdType=Previously Quoted
      The time in force for a quote is determined by agreement between counterparties.
      A quote can be canceled either using the Quote Cancel message or by sending a quote message with bid and offer prices and sizes all set to zero (BidPx, OfferPx, BidSize, OfferSize)

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      Z
    </MsgType>
    <Description>
      The Quote Cancel message is used by an originator of quotes to cancel quotes.
      The Quote Cancel message supports cancelation of:
      • All quotes
      • Quotes for a specific symbol or security ID
      • All quotes for a security type
      • All quotes for an underlying
      Canceling a Quote is accomplished by indicating the type of cancelation in the QuoteCancelType field.
      It is recommended that all Cancel messages be acknowledged using the Quote Status Report message.
      The Quote Cancelation only applies to quotes made by the current FIX user.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      a
    </MsgType>
    <Description>
      The quote status request message is used for the following purposes in markets that employ tradeable or restricted tradeable quotes:
      • For the issuer of a quote in a market to query the status of that quote (using the QuoteID to specify the target quote).
      • To subscribe and unsubscribe for Quote Status Report messages for one or more securities.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      AI
    </MsgType>
    <Description>
      The quote status report message is used:
      • as the response to a Quote Status Request message
      • as a response to a Quote Cancel message
      • as a response to a Quote Response message in a negotiation dialog (see Volume 7 – PRODUCT: FIXED INCOME and USER GROUP: EXCHANGES AND MARKETS)

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      i
    </MsgType>
    <Description>
      The Mass Quote message can contain quotes for multiple securities to support applications that allow for the mass quoting of an option series. Two levels of repeating groups have been provided to minimize the amount of data required to submit a set of quotes for a class of options (e.g. all option series for IBM).
      A QuoteSet specifies the first level of repeating fields for the Mass Quote message. It represents a group of related quotes and can, for example, represent an option class.

      Each QuoteSet contains an optional repeating group of QuoteEntries which can represent an option series.

      It is possible the number of Quote Entries for a Quote Set (option class) could exceed one’s physical or practical message size. It may be necessary to fragment a message across multiple quote messages. Message size limits must be mutually agreed to with one’s counterparties.

      The grouping of quotes is as follows:
      NoQuoteSets – specifies the number of sets of quotes contained in the message
      QuoteSetID – Is a unique ID given to the quote set
      Information regarding the security to which all of the quotes belong
      TotQuoteEntries – defines the number of quotes for the quote set across all messages
      NoQuoteEntries – defines the number of quotes contained within this message for this quote set
      QuoteEntryID – Is a unique ID given to a specific quote entry
      Information regarding the specific quote (bid/ask size and price)

      If there are too many Quote Entries for a Quote Set to fit into one physical message, then the quotes can be continued in another Mass Quote message by repeating all of the QuoteSet information and then specifying the number of Quote Entries (related symbols) in the continued message. The TotQuoteEntries is provided to optionally indicate to the counterparty the total number of Quote Entries for a Quote Set in multiple quote messages. This permits, but does not require, a receiving application to react in a stateful manner where it can determine if it has received all quotes for a Quote Set before carrying out some action. However, the overall approach to fragmentation is to permit each mass quote message to be processed in a stateless manner as it is received. Each mass quote message should contain enough information to have the Quote Entries applied to a market without requiring the next message if fragmentation has occurred. Also, a continued message should not require any information from the previous message.

      Maximum message size for fragmentation purposes can be determined by using the optional MaxMessageSize field in the Logon message or by mutual agreement between counterparties.


      Requesting Acknowledgement for Mass Quotes
      Applications can optionally support acknowledgement of quotes using the QuoteResponseLevel field. The QuoteResponseLevel is used to specify the level of acknowledgement requested from the counterparty. A QuoteResponseLevel of 0 indicates that no acknowledgement is requested. A ResponseLevel of 1 requests acknowledgement of invalid or erroneous quotes. A QuoteResponseLevel of 2 requests acknowledgement of each Mass Quote message.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      b
    </MsgType>
    <Description>
      Mass Quote Acknowledgement is used as the application level response to a Mass Quote message. The Mass Quote Acknowledgement contains a field for reporting the reason in the event that the entire quote is rejected (QuoteRejectReason[300]). The Mass Quote Acknowledgement also contains a field for each quote that is used in the event that the quote entry is rejected (QuoteEntryRejectReason[368]). The ability to reject an individual quote entry is important so that the majority of quotes can be successfully applied to the market instead of having to reject the entire Mass Quote for a minority of rejected quotes.
      Derivative markets are characterized by high bandwidth consumption – due to a change in an underlying security price causing multiple (often in the hundreds) of quotes to be recalculated and retransmitted to the market. For that reason the ability for market participants (and the market ) to be able to set the level of response requested to a Mass Quote message is specified using the QuoteResponseLevel[301] field.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      V
    </MsgType>
    <Description>
      Some systems allow the transmission of real-time quote, order, trade, trade volume, open interest, and/or other price information on a subscription basis. A Market Data Request is a general request for market data on specific securities or forex quotes.
      A successful Market Data Request returns one or more Market Data messages containing one or more Market Data Entries. Each Market Data Entry is a Bid, an Offer, a Trade associated with a security, the opening, closing, or settlement price of a security, the buyer or seller imbalance for a security, the value of an index, the trading session high price, low price, or VWAP, or the trade volume or open interest in a security. Market Data Entries usually have a price and a quantity associated with them. For example, in an order book environment, requesting just the top of book will result in only two active Market Data Entries at a time – one for the best Bid and one for the best Offer. For a full book, the Bid and Offer side may each have several Market Data Entries. Each Market Data Entry might represent an aggregate for each price tier, and only one Market Data Entry per side per price would be active at a time. This is referred to as an Aggregated book. When several Market Data Entries at one price tier could each represent a broker, Market Maker, ECN or Exchange’s quote in a security, or individual orders in a book, this is a Non-Aggregated book. Alternately, a Market Data Entry could represent a completed trade in a security, the value of an index, the opening, closing, or settlement price of an instrument, the trading session high price, low price, or VWAP, or the volume traded or open interest in a security.
      If the message is used for disseminating imbalance information, conventions are as follows:
      • MDEntrySize represents the size of the imbalance and is always a positive integer.
      • A TradeCondition of either P or Q is required to indicate the side of the imbalance.
      • Markets may wish to indicate the presence of an imbalance but not the actual size. In this case, MDEntrySize need not be specified.
      One specifies whether a list of trades, a 1-sided or 2-sided book, index, opening, closing, settlement, high, low and VWAP prices and imbalance volumes should be returned by using the NoMDEntryTypes field and MDEntryType repeating group to list all MDEntryType values that should be returned.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      W
    </MsgType>
    <Description>
      The Market Data messages are used as the response to a Market Data Request message. In all cases, one Market Data message refers only to one Market Data Request. It can be used to transmit a 2-sided book of orders or list of quotes, a list of trades, index values, opening, closing, settlement, high, low, or VWAP prices, the trade volume or open interest for a security, or any combination of these.
      Market Data messages sent as the result of a Market Data Request message will specify the appropriate MDReqID. Unsolicited Market Data messages can be sent; in such cases, MDReqID will not be present.
      Market Data messages include many fields, and not all are required to be used. A firm may, at its option, choose to send the minimum fields required, or may choose to send more information, such as tick direction, tagging of best quotes, etc.
      Market Data messages can take two forms. The first Market Data message format used for a Snapshot, or a Snapshot + Updates where MDUpdateType = Full Refresh (0) is as follows:
      • For Market Data Requests where a Bid or Offer is added, changed, or deleted, every update to a Market Data Entry results in a new Market Data message that contains the entirety of the data requested for that instrument, not just the changed Market Data Entry. In other words, both sides of the market, or just one side in the case of a request of only bids or offers, for the depth requested, must be sent in one FIX Market Data message.
      • A Market Data message may contain several trades, imbalances, an index value, opening, closing, settlement, high, low, and/or VWAP price for one instrument, as well as the traded volume and open interest, but only one instrument per message.
      • Messages containing bids and/or offers cannot contain trades, imbalances, index value, opening, closing, settlement, high, low, and/or VWAP prices, trade volume, or open interest as separate entires.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      X
    </MsgType>
    <Description>
      The second Market Data message format is used for incremental updates. Market Data Entries may have an MDEntryID unique among all currently active Market Data Entries so they can be referenced for the purposes of deleting and changing them later. When changing a Market Data Entry, it may keep the same MDEntryID, in which case only MDEntryID would be populated, or the MDEntryID may change, in which case MDEntryID will contain the new ID, and MDEntryRefID will contain the ID of the Market Data Entry being changed. An MDEntryID can be reused within a day only if it has first been deleted.
      Alternately, in the case of displaying the best quotes of Market Makers or Exchanges, and not orders in an order book, MDEntryID can be omitted for simplification. In this case, a New Market Data Entry will replace the previous best quote for that side and symbol for the specified Market Maker or Exchange. Deletion of a Market Data Entry would not specify an MDEntryID or MDRefID, and would remove the most recent Market Data Entry for the specified symbol, side, and Market Maker or Exchange. A Change of a Market Data Entry would not specify an MDEntryID or MDRefID, and would replace the most recent Market Data Entry for the specified symbol, side, and Market Maker or Exchange.
      The Market Data message for incremental updates may contain any combination of new, changed, or deleted Market Data Entries, for any combination of instruments, with any combination of trades, imbalances, quotes, index values, open, close, settlement, high, low, and VWAP prices, trade volume and open interest so long as the maximum FIX message size is not exceeded. All of these types of Market Data Entries can be changed and deleted.
      Adding, Changing, or Deleting Market Data Entries requires special consideration of the MDEntryPositionNo field, if the sender wishes to specify it and the receiver wishes to process it. For example, assume ten bids for a security. Adding a bid with MDEntryPositionNo = 4 requires the receiver to shift down other Market Data Entries, i.e. the Market Data Entry in the 4th display position will shift to the 5th, the 5th shifts to the 6th, etc. until the 10th shifts to the 11th. The sender must NOT send a modification of all MDEntries in the 4th through 10th positions just to update the MDEntryPositionNo field; the recipient must infer the change. Similarly, deleting a Market Data Entry in the 7th position causes the 8th Market Data Entry to move into the 7th position, the 9th to shift into the 8th position, etc. A Change of the MDEntryPositionNo field of a Market Data Entry causes the Market Data Entries lying between the old and new positions to shift. For instance, a Market Data Entry that occupied the 5th position is changed to the 8th position. This means that the Market Data Entry in the 6th position shifts up to the 5th position, the 7th position shifts to the 6th, and what was in the 8th position shifts into the 7th to make room for the changed Market Data Entry that is being moved into the 8th position.
      Several techniques are employed to conserve bandwidth:
      • An instrument only needs to be identified when a Market Data Entry is first created.
      • In cases where the identification of an instrument is long, the sender has the option of referring to a previous active Market Data Entry of the same instrument instead of duplicating the information.
      • A new Market Data Entry will default to the same instrument of the previous Market Data Entry in the same Market Data message if neither Symbol nor MDEntryRefID are specified.
      • In the case of a change in a Market Data Entry, only the fields changing need to be sent as part of the change to the Market Data Entry; for example, a change of the MDEntrySize but not the MDEntryPx or other attributes of the Market Data Entry only requires listing the MDEntrySize field, in addition to MDUpdateAction and MDEntryID if used in the original Market Data Entry
      • When creating a new Market Data Entry with a future or option instrument similar to the instrument in the previous Market Data Entry in the same FIX message, one may send just symbol identification fields that have changed, such as MaturityMonthYear, MaturityDay, StrikePrice, OptAttribute, and SecurityExchange.
      • MDEntryID can be reused within the same day after it is deleted. This is helpful for distributing order books because an order that is suspended and then reinstated can have its MDEntryID deleted upon suspension and later reused, with MDUpdateAction = New(0) upon reinstatement, thus avoiding having to re-map the MDEntryID.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      Y
    </MsgType>
    <Description>
      The Market Data Request Reject is used when the broker cannot honor the Market Data Request, due to business or technical reasons. Brokers may choose to limit various parameters, such as the size of requests, whether just the top of book or the entire book may be displayed, and whether Full or Incremental updates must be used.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      CC
    </MsgType>
    <Description>
      In certain markets where market data aggregators fan out to end clients the pricing streams provided by the price makers, the price maker may assign the clients to certain pricing streams that the price maker publishes via the aggregator. An example of this use is in the FX markets where clients may be assigned to different pricing streams based on volume bands and currency pairs.
      The Stream Assignment set of messages facilitates the automation of assigning clients to specific price streams by the price makers and allowing the price maker to notify the aggregator of these assignments.
      The Stream Assignment Request message is used by the aggregator and sent to the price maker to request stream assignments for one or more clients. The response to this message is the Stream Assignment Report.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      CD
    </MsgType>
    <Description>
      The StreamAssignmentReport message is in response to the StreamAssignmentRequest message. It provides information back to the aggregator as to which clients to assign to receive which price stream based on requested CCY pair. This message can be sent unsolicited to the Aggregator from the Price Maker.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      CE
    </MsgType>
    <Description>
      This message is used to respond to the Stream Assignment Report, to either accept or reject an unsolicited assingment.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BT
    </MsgType>
    <Description>
      The Market Definition Request message is used to request for market structure information from the Respondent that receives this request. Fields that are specified will act as "filters" for the request. For example, if MarketID is specified then only market structure information for that specified market should be sent back if available. If MarketID is not specified then the request is for all available market structure information.
      The Market Definition Request can also indicate to the Respondent whether the request is for a snapshot of requested information, subscribe to market structure information, or to unsubscribe to an earlier subsription request. This is done via the SubscriptionRequestType (263) field.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BU
    </MsgType>
    <Description>
      The Market Definition message is used to respond to Market Definition Request. In a subscription, it will be used to provide the initial snapshot of the information requested. Subsequent updates are provided by the Market Definition Update Report.
      This message is associated with a list of trading sessions (and subsessions) applicable for the segment - the list is published using the Trading Session List message.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BV
    </MsgType>
    <Description>
      In a subscription for market structure information, this message is used once the initial snapshot of the information has been sent using the Market Definition message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      g
    </MsgType>
    <Description>
      The Trading Session Status Request is used to request information on the status of a market. With the move to multiple sessions occurring for a given trading party (morning and evening sessions for instance) there is a need to be able to provide information on what product is trading on what market.
      The Trading Session Status Request message can be used to inquire the trading status of a trading party. The Trading Session Status message can be used to subscribe to updates to the status of a trading session by setting the RequestType field to 1.
      To list the securities available during a particular trading session, see the SecurityDefinitionRequest message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      h
    </MsgType>
    <Description>
      The Trading Session Status provides information on the status of a market. For markets multiple trading sessions on multiple-markets occurring (morning and evening sessions for instance), this message is able to provide information on what products are trading on what market during what trading session.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BI
    </MsgType>
    <Description>
      The Trading Session List Request is used to request a list of trading sessions available in a market place and the state of those trading sessions. The request can be modified to request status on a particular trading session (by specifying the TradingSessionID (tag 336) and TradingSessionSubID (tag 625) (if used by the market place). The request can be used to request a list of trading sessions that use a particular trading method or mode (such as electronic) by specifying the TradSesMethod (tag 338) and/or TradSesMode( tag 339).
      A successful request will result in a response from the counterparty of a Trading Session List (MsgType=BJ) message that contains a list of zero or more trading sessions.
      It is recommended that the TradSesReqID be used to provide a unique identifier for the request. This value should be returned by the counterparty in the Trading Session List messages sent in response to the request.
      The Trading Session List Request follows the standard request model in providing the SubscriptionRequestType (tag 263) field which can be used to obtain a snapshot of trading session information, subscribe for a snapshot with subsequent updates, or to unsubscribe from a previous subscription request.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BJ
    </MsgType>
    <Description>
      The Trading Session List message is sent as a response to a Trading Session List Request. The Trading Session List should contain the characteristics of the trading session and the current state of the trading session.
      The message could be relayed every trading day, or at least when trading sessions are changed. The user of the message has the ability to relay either Trading Sessions only or, if applicable, Trading SubSessions. Depending on characteristics of the market, the various Time fields may apply.
      The Trading Session List should return the TradSesReqID(tag 335) value from the Trading Session List Request originally sent by a counterparty.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BS
    </MsgType>
    <Description>
      The Trading Session List Update Report is used by marketplaces to provide intra-day updates of trading sessions when there are changes to one or more trading sessions.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      c
    </MsgType>
    <Description>
      The Security Definition Request message is used for the following:
      1. Request a specific Security to be traded with the second party. The request security can be defined as a multileg security made up of one or more instrument legs.
      2. Request a set of individual securities for a single market segment.
      3. Request all securities, independent of market segment.
      Subscription for security status can be optionally specified by including the SubscriptionRequestType[263] field on the message.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      d
    </MsgType>
    <Description>
      The Security Definition message is used for the following:
      1. Accept the security defined in a Security Definition message.
      2. Accept the security defined in a Security Definition message with changes to the definition and/or identity of the security.
      3. Reject the security requested in a Security Definition message.
      4. Respond to a request for securities within a specified market segment.
      5. Convey comprehensive security definition for all market segments that the security participates in.
      6. Convey the security's trading rules that differ from default rules for the market segment.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BP
    </MsgType>
    <Description>
      This message is used for reporting updates to a Product Security Masterfile. Updates could be the result of corporate actions or other business events. Updates may include additions, modifications or deletions.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      v
    </MsgType>
    <Description>
      The Security Type Request message is used to return a list of security types available from a counterparty or market,
      The request can include a specific TradingSessionID for which Security Types should be returned.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      w
    </MsgType>
    <Description>
      The Security Type message is used to return a list of security types available from a counterparty or market.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      x
    </MsgType>
    <Description>
      The Security List Request message is used to return a list of securities from the counterparty that match criteria provided on the request
      Subscription for security status can be optionally specified by including the SubscriptionRequestType[263] field on the message.
      SecurityListRequestType[559] specifies the criteria of the request.
      The Security List Request may also be used to request a list of securities for a given market segment.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      y
    </MsgType>
    <Description>
      The Security List message is used to return a list of securities that matches the criteria specified in a Security List Request.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BK
    </MsgType>
    <Description>
      The Security List Update Report is used for reporting updates to a Contract Security Masterfile. Updates could be due to Corporate Actions or other business events. Update may include additions, modifications and deletions.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      z
    </MsgType>
    <Description>
      The Derivative Security List Request message is used to return a list of securities from the counterparty that match criteria provided on the request
      Subscription for security status can be optionally specified by including the SubscriptionRequestType[263] field on the message.
      SecurityListRequestType[559] specifies the criteria of the request
      Derivative SecurityListRequest may also be used to:
      1. Request for option classes for a given market segment.
      2. Allows a request all derivative securities to be made independent of Market Segment. The option classes may carry all relevant Market Segments and their corresponding trading rules.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      AA
    </MsgType>
    <Description>
      The Derivative Security List message is used to return a list of securities that matches the criteria specified in a Derivative Security List Request.
      The Derivative Security List message is used to send a predefined list of securities (usually options) based on a common underlying and option class. It can also be used to send the rules for security creation (usually options) which imply the existence of a set of securities.
      Other uses of this message may include:
      1. Convey compreshensive set of option classes for all market segments in which these option classes participates in.
      2. Convey the option classes' trading rules that differ from the default trading rules for the market segment.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      BR
    </MsgType>
    <Description>
      The Derivative Security List Update Report message is used to send updates to an option family or the strikes that comprise an option family.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      e
    </MsgType>
    <Description>
      The Security Status Request message provides for the ability to request the status of a security. One or more Security Status messages are returned as a result of a Security Status Request message.
      The Security Status Request message contains a SubscriptionRequestType field. This tells the counter party what type of request is being made:
      0 – indicates that the requestor only wants a snapshot or the current status.
      1 – indicates that the requestor wants a snapshot (the current status) plus updates as the status changes. This is similar to subscribing for information and can be implemented in applications as a subscription mechanism.
      2 – indicates that the requestor wishes to cancel any pending snapshots or updates – in essence making this an unsubscribe operation.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      f
    </MsgType>
    <Description>
      The Security Status message provides for the ability to report changes in status to a security. The Security Status message contains fields to indicate trading status, corporate actions, financial status of the company. The Security Status message is used by one trading entity (for instance an exchange) to report changes in the state of a security.
      It is expected that the Security Status message that is sent as a response should indicate what type of request is being provided. If the message is being generated as a result of a RequestType =1, then the response should have a RequestType=1 to permit the requestor to determine why the message was sent.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      D
    </MsgType>
    <Description>
      The new order message type is used by institutions wishing to electronically submit securities and forex orders to a broker for execution.
      The New Order message type may also be used by institutions or retail intermediaries wishing to electronically submit Collective Investment Vehicle (CIV) orders to a broker or fund manager for execution.
      See VOLUME 7 - "PRODUCT: COLLECTIVE INVESTMENT VEHICLES"
      Orders can be submitted with special handling instructions and execution instructions. Handling instructions refer to how the broker should handle the order on its trading floor (see HandlInst field). Execution instructions contain explicit directions as to how the order should be executed (see ExecInst field).
      New Order messages received with the PossResend flag set in the header should be validated by ClOrdID. Implementations should also consider checking order parameters (side, symbol, quantity, etc.) to determine if the order had been previously submitted. PossResends previously received should be acknowledged back to the client via an Execution - Status message. PossResends not previously received should be processed as a new order and acknowledged via an Execution - New message.
      The value specified in the TransactTime field should allow the receiver of the order to apply business rules to determine if the order is potentially "stale" (e.g. in the event that there have been communication problems).To support forex accommodation trades, two fields, ForexReq and SettlCurrency, are included in the message. To request a broker to execute a forex trade in conjunction with the securities trade, the institution would set the ForexReq = Y and SettlCurrency = “intended settlement currency”. The broker would then execute a forex trade from the execution currency to the settlement currency and report the results via the execution message in the SettlCurrAmt and SettlCurrency fields.
      See VOLUME 7 - "PRODUCT: FOREIGN EXCHANGE" section for more detailed usage notes specific to Foreign Exchange trading.

      Orders involving or requiring Pre-Trade Allocation consist of the following steps:
      • Buyside sends a New Order request message specifying one or more AllocAccount and AllocQty values within the repeating group designated by NoAllocs.
      • Sellside sends Execution Report messages for the “New” and resulting fills.
      • Post-Trade Allocation messaging takes place

      To “take” an IOI (or Quote) from an ECN or exchange and not display the order on the book, the New Order message should contain the TimeInForce field with ImmediateOrCancel and an OrdType field with Previously Indicated ( or Previously Quoted).

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
8
    </MsgType>
    <Description>
      The execution report message is used to:
      1. confirm the receipt of an order
      2. confirm changes to an existing order (i.e. accept cancel and replace requests)
      3. relay order status information
      4. relay fill information on working orders
      5. relay fill information on tradeable or restricted tradeable quotes
      6. reject orders
      7. report post-trade fees calculations associated with a trade
      NOTE: Execution reports do not replace the end-of-day confirm. Execution reports are to be regarded only as replacements for the existing fill messages currently communicated via telephone.
      NOTE: Individual Execution Reports are sent for each order on a New Order - List.
      Each execution report contains two fields which are used to communicate both the current state of the order as understood by the broker (OrdStatus) and the purpose of the message (ExecType).
      In an execution report the OrdStatus is used to convey the current state of the order. If an order simultaneously exists in more than one order state, the value with highest precedence is the value that is reported in the OrdStatus field. See specification for OrdStatus precedence.      
      The ExecType is used to identify the purpose of the execution report message. To transmit a change in OrdStatus for an order, the broker (sell side) should send an Execution Report with the new OrdStatus value in both the ExecType AND the OrdStatus fields to signify this message is changing the state of the order. The only exception to this rule is that when rejecting a cancel or cancel/replace request the CancelReject message is used both to reject the request and to communicate the current OrdStatus. An ExecType of Pending Cancel or Pending Replace is used to indicate that a cancel or cancel/replace request is being processed. An ExecType of Canceled or Replace is used to indicate that the cancel or cancel/replace request has been successfully processed.
      Execution information (e.g. new partial fill or complete fill) should not be communicated in the same report as one which communicates other state changes (such as pending cancel, pending replace, canceled, replaced, accepted, done for day etc).
      Any fills which occur and need to be communicated to the customer while an order is “pending” and waiting to achieve a new state (e.g. via a Order Cancel Replace (aka Order Modification) Request) must contain the “original” (current order prior to state change request) order parameters (i.e. ClOrdID, OrderQty, Price, etc). These fills will cause the CumQty and AvgPx to be updated. An order cannot be considered replaced until it has been explicitly accepted and confirmed to have reached the replaced status via an execution report with ExecType = ‘Replace’, at which time the effect of the replacement (ClOrdID, new quantity or limit price etc) will be seen.
      Requests to cancel or cancel/replace an order are only acted upon when there is an outstanding order quantity. Requests to replace the OrderQty to a level less than the CumQty will be interpreted by the broker as requests to stop executing the order. Requests to change price on a filled order will be rejected (see Order Cancel Reject message type). The OrderQty, CumQty, LeavesQty, and AvgPx fields should be calculated to reflect the cumulative result of all versions of an order. For example, if partially filled order A were replaced by order B, the OrderQty, CumQty, LeavesQty, and AvgPx on order B’s fills should represent the cumulative result of order A plus those on order B.
      The general rule is: OrderQty = CumQty + LeavesQty.
      There can be exceptions to this rule when ExecType and/or OrdStatus are Canceled, DoneForTheDay (e.g. on a day order), Expired, Calculated, or Rejected in which case the order is no longer active and LeavesQty could be 0.

      Communication of information about a new fill is via the Execution report with ExecType = Trade. Execution Reports with ExecType = Trade Cancel or Trade Correct are used to cancel or correct a previously modified execution report as follows:

      • The ExecType of Trade Cancel applies at the execution level and is used to cancel an execution which has been reported in error. The canceled execution will be identified in the ExecRefID field. Note: ExecType of Trade Cancel should not be used to cancel a previous ExecutionRpt with ExecType of Trade Cancel (i.e. cannot cancel a cancel).
      • The ExecType of Trade Correct applies at the execution level and is used to modify an incorrectly reported fill. The incorrect execution will be identified in the ExecRefID field. If a single execution is corrected more than once, ExecRefID should refer to the ExecID of the last corrected ExecutionRpt (same convention as ClOrdID and OrigClOrdID). To correct an ExecutionRpt which was previously canceled, an ExecutionRpt with ExecType=Trade should be sent (i.e. cannot send ExecType=Trade Correct for an ExecutionRpt with ExecType=Trade Cancel). Note: Data reported in the CumQty, LeavesQty, and AvgPx fields represent the status of the order as of the time of the correction, not as of the time of the originally reported execution.

      An ExecType of Order Status indicates that the execution messages contains no new information, only summary information regarding order status. It is used, for example, in response to an Order Status request message

      See "Order State Change Matrices" for examples of key state changes, processing of cancel and cancel/replace requests, and for execution cancel/corrects.
      An ExecutionRpt with ExecType = Restated represents an ExecutionRpt sent by the sellside communicating a change in the order or a restatement of the order’s parameters without an electronic request from the customer. ExecRestatementReason must be set. This is used for GT orders and corporate actions (see below), changes communicated verbally to the sellside either due to normal business practices or as an emergency measure when electronic systems are not available, repricing of orders by the sellside (such as making Sell Short orders compliant with uptick / downtick rules), or other reasons (Broker option). ExecRestatementReason can also be used to communicate unsolicited cancels.

      The field ClOrdID is provided for institutions or buy-side brokers or intermediaries to affix an identification number to an order to coincide with internal systems. The OrderID field is populated with the sell-side broker-generated order number (or fund manager-generated order number for CIVs). Unlike ClOrdID/OrigClOrdID which requires a chaining through Cancel/Replaces and Cancels, OrderID and SecondaryOrderID are not required to change through changes to an order.
      The underlying business assumption of orders that can trade over multiple days, such as GTC and Good Till Date orders expiring on a future trading date (henceforth referred to as GT orders) is that a GT order that is not fully executed and has not been canceled and has not expired on a given day remains good for the broker to execute the following day. Note that the concept of “day” is determined by the market convention, which will be security specific. At the end of each trading day, once the order is no longer subject to execution, the broker may optionally send an Execution Report with ExecType=Done for Day(3). When the ExpireDate or ExpireTime of a Good Till Date order is reached, or a GTC order reaches a maximum age, the order is considered expired and the broker may optionally send an Execution Report with ExecType and OrdStatus=Expired(C).

      In handling GT orders, the OrderQty, CumQty and AvgPx fields will represent the entirety of the order over all days. The fields DayOrderQty, DayCumQty, and DayAvgPx can be used on days following the day of the first trade on a GT order. Prior to the start of business each day, for all GT orders that have partial fills on previous days, DayCumQty and DayAvgPx are set to zero, and DayOrderQty becomes the LeavesQty. The following relationship holds: DayOrderQty = OrderQty – (CumQty – DayCumQty). Since (CumQty – DayCumQty) represents the volume traded on all previous days, DayOrderQty = OrderQty – Volume traded on all previous days. Note that when changing the quantity of an order, both OrderQty and DayOrderQty will change. Requests to change or cancel an order will be made in terms of the total quantity for the order, not the quantity open today. For example, on an order where OrderQty=10000 and 2000 shares trade during the previous days, a request to change OrderQty to 15000 will mean that 13000 shares will be open. See "Order State Change Matrices" for examples of canceling and changing GT orders partially filled on previous days.
      A Cancel on an execution (trade bust, ExecType = Trade Cancel) happening the same day of the trade will result in CumQty and DayCumQty each decreasing by the quantity busted, and LeavesQty increasing by the quantity busted. OrderQty and DayOrderQty will remain unchanged. If the business rules allow for a trade bust to be reported on a later date than the trade being busted, the OrderQty and DayCumQty will remain unchanged, the LeavesQty and DayOrderQty will increase by the quantity busted, and the CumQty will decrease by the quantity busted.

      If bilaterally agreed between counterparties, a broker may wish to transmit a list of all open GT orders, permitting reconciliation of the open orders. Typically this transmission may occur at the end of the trading day or at the start of the following trading day. There is no expected response to such retransmission; in the event of a reconciliation problem this should be resolved manually or via the DK message. Assuming no corporate actions have occurred, the broker will send an Execution Report with ExecType = Restated (D) and ExecRestatementReason = GT renewal / restatement (no corporate action) (1) for each open GT order. These Execution Reports may have DayCumQty and DayAvgPx restated to zero, and DayOrderQty restated to LeavesQty if the transmission occurs at the start of the following business day. The broker has the option of changing the OrderID and SecondaryOrderID fields, or leaving them unchanged. If they are changed, then the buy-side should use these new ID fields when sending Order Cancel Request, Order Cancel/Replace Request, and Order Status Request messages.

      In the case of a corporate action resulting in the adjustment of an open GT order, the broker will send an Execution Report with ExecType = Restated (D) and ExecRestatementReason = GT Corporate action (0) with the order’s state after the corporate action adjustment. In the case of stock splits, OrderQty, CumQty, AvgPx, and LeavesQty will be adjusted to reflect the order’s state in terms of current quantity (e.g. shares), not pre-split quantity (e.g. shares). See "Order State Change Matrices" for examples of GT order restatement with and without a corporate action.

      CIV orders to be executed by the fund manager do not use the TimeInForce field and only a subset of OrdStatus values are expected to be used. See VOLUME 7 - "PRODUCT: COLLECTIVE INVESTMENT VEHICLES" for the CIV-specific OrdStatus values.

      The Execution Report message is also used for multileg instrument. See “Use of the Execution Report for Multileg Instruments” for multileg-specific details.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
      Q
    </MsgType>
    <Description>
      The Don’t Know Trade (DK) message notifies a trading partner that an electronically received execution has been rejected.  This message can be thought of as an execution reject message.
      This message has special utility when dealing with one-way execution reporting.  If the initial Order Acknowledgment message (Execution Report with LastQty=0 and OrdStatus=New) does not match an existing order this message can be used to notify the broker of a potential problem order.
      Note that the decision to DK an execution lies with the institution.  Some of the mismatches listed in the DKReason field may be acceptable and will not require a DK messages to be generated.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BN
    </MsgType>
    <Description>
      The Execution Report Acknowledgement message is an optional message that provides dual functionality to notify a trading partner that an electronically received execution has either been accepted or rejected (DK'd).
      The DK portion of this message does not replace the existing DK Trade message for users who have already implemented the DK Trade message.  For users who have not implemented the DK Trade message, through this single message they will be able to accept and DK an execution report.  Users who wish to continue to use the DK Trade but also want a means to explicitly accept an execution report can also use this message to accept the execution report.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
G
    </MsgType>
    <Description>
      The order cancel/replace request is used to change the parameters of an existing order.
      Do not use this message to cancel the remaining quantity of an outstanding order, use the Order Cancel Request message for this purpose.
      Cancel/Replace will be used to change any valid attribute of an open order (i.e. reduce/increase quantity, change limit price, change instructions, etc.), Subject to agreement between counterparties, it can be used to re-open a filled order by increasing OrderQty.

      An immediate response to this message is required. It is recommended that an ExecutionRpt with ExecType=Pending Replace be sent unless the Order Cancel/Replace Request can be immediately accepted (ExecutionRpt with ExecType=Replace) or rejected (Order Cancel Reject message).

      The Cancel/Replace request will only be accepted if the order can successfully be pulled back from the exchange floor without executing.  Requests which cannot be processed will be rejected using the Cancel Reject message.  The Cancel Reject message should provide the ClOrdID and OrigClOrdID values which were specified on the Cancel/Replace Request message for identification.
      Note that while it is necessary for the ClOrdID to change and be unique, the broker’s OrderID field does not necessarily have to change as a result of the Cancel/Replace request.
      The protocol supports the chaining of multiple cancel/replace requests, though trading counterparties may not support this functionality. Care should be taken if the order sender wishes to send a cancel/replace request when there is one or more cancel/replaces which have not been accepted or rejected – in general:
    •	The order sender should chain client order ids on an ‘optimistic’ basis, i.e. set the OrigClOrdID to the last non rejected ClOrdID sent
    •	The order receiver should chain client order ids on a ‘pessimistic’ basis, i.e. set the OrigClOrdID on execution reports that convey the receipt or succesful application of a cancel/replace and Order Cancel Reject messages to be the last ‘accepted’ ClOrdID (See "Order State Change Matrices" for examples of this)
      In the event that the order sender wants to chain order cancel/replaces rapidly then they should ensure that each replace request contains the full details of the order as they would now like it to be. For example if an attempt is made to change the limit price and then an immediate request to change the quantity is issued then if the desired behaviour is that both the limit price and quantity should be changed then the second request should include the revised limit price (in case the first replace request is rejected).

    All of the application-level fields in the original order should be retransmitted with the original values in the Order Cancel/Replace Request, except the fields that are being changed.  Any field may be changed with this message except those in the Instrument component block and limited changes to the Side field (noted below), however,  buy-side firms should note that sell-side firms may further restrict which fields they allow to change; hence bilateral agreement is required.  For example, some sell-side firms may not allow fields such as Side, SettlDate, etc. to change.  Sell-side firms should validate the Order Cancel/Replace Request to ensure that the client is not requesting a change for a field that the sell-side cannot change; in this case the sell-side should send a Cancel Reject message with CxlRejReason = 2 (Broker/Exchange Option).

      When modifying ExecInst values in a replacement order, it is necessary to re-declare all ExecInst in the replacement order.  ExecInst values will not be carried forward from the original order to the replacement unless re-declared.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
F
    </MsgType>
    <Description>
      The order cancel request message requests the cancelation of all of the remaining quantity of an existing order.  Note that the Order Cancel/Replace Request should be used to partially cancel (reduce) an order).
      The request will only be accepted if the order can successfully be pulled back from the exchange floor without executing.
      A cancel request is assigned a ClOrdID and is treated as a separate entity.  If rejected, the ClOrdID of the cancel request will be sent in the Cancel Reject message, as well as the ClOrdID of the actual order in the OrigClOrdID field.  The ClOrdID assigned to the cancel request must be unique amongst the ClOrdID assigned to regular orders and replacement orders.
      An immediate response to this message is required.  It is recommended that an ExecutionRpt with ExecType=Pending Cancel be sent unless the Order Cancel Request can be immediately accepted (ExecutionRpt with ExecType=Canceled) or rejected (Order Cancel Reject message).

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
9
    </MsgType>
    <Description>
      The order cancel reject message is issued by the broker upon receipt of a cancel request or cancel/replace request message which cannot be honored.  Requests to change price or decrease quantity are executed only when an outstanding quantity exists.  Filled orders cannot be changed (i.e quantity reduced or price change. However, the broker/sellside may support increasing the order quantity on a currently filled order).

      When rejecting a Cancel/Replace Request (or Cancel Request), the Cancel Reject message should provide the ClOrdID which was  specified on the Cancel/Replace Request (or Cancel Request) message for identification, and the OrigClOrdId should be that of the last accepted order (except in the case of CxlRejReason = “Unknown Order”.

      When rejecting an Order Mass Cancel Request, the ClOrdID should be set to the ClOrdID value of the Order Mass Cancel Request.  OrigClOrdID is not specified for a rejected Order Mass Cancel Request.
      The execution message responds to accepted cancel request and cancel/replace request messages.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
H
    </MsgType>
    <Description>
      The order status request message is used by the institution to generate an order status message back from the broker.

    (See "Order State Change Matrices" for examples of usage of this message, including how to respond to a status request for an unknown order.)

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
q
    </MsgType>
    <Description>
      The order mass cancel request message requests the cancelation of all of the remaining quantity of a group of orders matching criteria specified within the request. NOTE: This message can only be used to cancel order messages (reduce the full quantity).
      An order mass cancel request is assigned a ClOrdID and is treated as a separate entity. The order mass cancel request is acknowledged using an Order Mass Cancel Report. The Order Mass Cancel Report will contain the ClOrdID that was specified on the Order Mass Cancel Request.  The ClOrdID assigned to the cancel request must be unique amongst the ClOrdID assigned to regular orders, replacement orders, cancel requests, and order mass cancel requests.
      An immediate response to this message is required. It is recommended that an ExecutionRpt with ExecType=Pending Cancel be sent unless the Order Mass Cancel Request can be immediately accepted (ExecutionRpt with ExecType=Canceled) or rejected (Order Cancel Reject message).
      Specifying order cancellation criteria is specified using the MassCancelRequestType field.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
r
    </MsgType>
    <Description>
	The Order Mass Cancel Report is used to acknowledge an Order Mass Cancel Request. Note that each affected order that is canceled is acknowledged with a separate Execution Report or Order Cancel Reject message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AF
    </MsgType>
    <Description>
      The order mass status request message requests the status for orders matching criteria specified within the request.
      A mass status request is assigned a ClOrdID and is treated as a separate entity.
      ExecutionReports with ExecType="Order Status" are returned for all orders matching the criteria provided on the request.
      Specifying order selection criteria is specified using the MassStatusReqType field.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
CA
    </MsgType>
    <Description>
      The Order Mass Action Request message can be used to request the suspension or release of a group of orders that match the criteria specified within the request. This is equivalent to individual Order Cancel Replace Requests for each order with or without adding “S” to the ExecInst values. It can also be used for mass order cancellation.
      An Order Mass Action Request is assigned a ClOrdID and is treated as a separate entity. The Order Mass Action Request is acknowledged using an Order Mass Action Report. The Order Mass Action Report will contain the ClOrdID that was specified on the Order Mass Action Request. The ClOrdID assigned to the suspension or release request must be unique amongst the ClOrdID assigned to regular orders, replacement orders, cancel requests, etc.
      An immediate response to this message is required. It is recommended that an Execution Report with ExecType=Pending Replace (or Pending Cancel if used for mass cancellation) be sent unless the Order Mass Action Request can be immediately accepted (Execution Report with ExecType=Replaced or Canceled).
      Specifying filtering criteria is done using the MassActionType field.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BZ
    </MsgType>
    <Description>
The Order Mass Action Report is used to acknowledge an Order Mass Action Request.  Note that each affected order that is suspended or released or canceled is acknowledged with a separate Execution Report for each order.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
s
    </MsgType>
    <Description>
	Used to submit a cross order into a market. The cross order contains two order sides (a buy and a sell). The cross order is identified by its CrossID.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
t
    </MsgType>
    <Description>
      Used to modify a cross order previously submitted using the New Order - Cross message. See Order Cancel Replace Request for details concerning message usage.
    Refer to the Order Cancel Replace Request (a.k.a. Order Modification Request) message for restrictions on what fields can be changed during a cancel replace.
    The Cross Order-specific fields, CrossType (tag 549) and CrossPrioritization (tag 550), can not be modified using the Cross Order Cancel Replace Request.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
u
    </MsgType>
    <Description>
Used to fully cancel the remaining open quantity of a cross order.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AB
    </MsgType>
    <Description>
	The New Order - Multileg is provided to submit orders for securities that are made up of multiple securities, known as legs.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AC
    </MsgType>
    <Description>
	Used to modify a multileg order previously submitted using the New Order - Multileg message. See Order Cancel Replace Request for details concerning message usage.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
k
    </MsgType>
    <Description>
      The BidRequest Message can be used in one of two ways depending on which market conventions are being followed.
      In the “Non disclosed” convention (e.g. US/European model) the BidRequest message can be used to request a bid based on the sector, country, index and liquidity information contained within the message itself. In the “Non disclosed” convention the entry repeating group is used to define liquidity of the program. See " Program/Basket/List Trading"  for an example.
      In the “Disclosed” convention (e.g. Japanese model) the BidRequest message can be used to request bids based on the ListOrderDetail messages sent in advance of BidRequest message. In the “Disclosed” convention the list repeating group is used to define which ListOrderDetail messages a bid is being sort for and the directions of the required bids.
      The pair of fields SideValue1 and SideValue2 are used to show the monetary total value in either direction (buy or sell) of the transaction without revealing whether it is the buy-side institution’s intention to buy or sell.
      The two repeating groups, NoEntries and NoBidComponents are mutually exclusive and a function of which bidding model is being used. If the “Non Disclosure” method is being used the portfolio of stocks being traded is described by a number of “bid descriptors” entries. If the “Disclosure” Method is being used the portfolio is fully disclosed, except for side, by a number of “list” entries enumerating the lists that list the stocks to be traded.
      A BidRequest message with BidRequestTransType cancel may be used to indicate to sell side firms that they no longer need to store details of the BidRequest as they have either lost the bid or the List has been canceled.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
l
    </MsgType>
    <Description>
      The Bid Response message can be used in one of two ways depending on which market conventions are being followed.
      In the “Non disclosed” convention the Bid Response message can be used to supply a bid based on the sector, country, index and liquidity information contained within the corresponding bid request message. See "Program/Basket/List Trading"  for an example.
      In the “Disclosed” convention the Bid Response message can be used to supply bids based on the List Order Detail messages sent in advance of the corresponding Bid Request message.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
E
    </MsgType>
    <Description>
      The NewOrderList Message can be used in one of two ways depending on which market conventions are being followed.
      In the “Non disclosed” convention the New Order - List message is sent after the bidding process has been completed, by telephone or electronically. The New Order - List message enumerates the stocks, quantities, direction for the trade and may contain pre-allocation information.
      This message may also be used as the first message for the transmission of a program trade where the bidding process has been done by means other than FIX. In this scenario the messages may either be used as a staging process, in which case the broker will start execution once either a ListExecute is received or for immediate execution, in which case the orders will be executed on receipt.
      In the “Disclosed” convention the New Order - List message is sent before the bidding process is started, by telephone or electronically. The New Order - List message enumerates the stocks and quantities from the bidding process, and may contain pre-allocation information. The direction of the trade is disclosed after the bidding process is completed.
      Where multiple waves of a program trade are submitted by an institution or retail intermediaries, as a series of separate lists, to a broker ClOrdLinkID may be used to link the orders together.
      See "Program/Basket/List Trading"  for examples.
      The New Order – List message type may also be used by institutions or retail intermediaries wishing to electronically submit multiple Collective Investment Vehicle orders to a broker or fund manager for execution.
      See VOLUME 7 - "PRODUCT: COLLECTIVE INVESTMENT VEHICLES"

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
m
    </MsgType>
    <Description>
The strike price message is used to exchange strike price information for principal trades. It can also be used to exchange reference prices for agency trades.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
N
    </MsgType>
    <Description>
      The list status message is issued as the response to a List Status Request message sent in an unsolicited fashion by the sell-side. It indicates the current state of the orders within the list as they exist at the broker's site. This message may also be used to respond to the List Cancel Request.
      Orders within the list are statused at the summary level.  Individual executions are not reported, rather, the current state of the order is reported.
      The message contains repeating fields for each.  The relative position of the repeating fields is important in this message,  i.e. each instance of ClOrdID, CumQty, LeavesQty, CxlQty and AvgPx must be in the order shown.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
L
    </MsgType>
    <Description>
The List Execute message type is used by institutions to instruct the broker to begin execution of a previously submitted list.  This message may or may not be used, as it may be mirroring a phone conversation.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
K
    </MsgType>
    <Description>
      The List Cancel Request message type is used by institutions wishing to cancel previously submitted lists either before or during execution.
      After the list has been staged with the broker, it can be canceled via the submission of the List Cancel message.  If the list has not yet been submitted for execution, the List Cancel message will instruct the broker not to execute it, if the list is being executed, the List Cancel message should trigger the broker's system to generate cancel requests for the remaining quantities of each order within the list.  Individual orders within the list can be canceled via the Order Cancel Request message.
      The List Status message type is used by the recipient of the List Cancel Request to communicate the status of the List Cancel Request.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
M
    </MsgType>
    <Description>
The list status request message type is used by institutions to instruct the broker to generate status messages for a list.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
J
    </MsgType>
    <Description>
      The Allocation Instruction message provides the ability to specify how an order or set of orders should be subdivided amongst one or more accounts. In versions of FIX prior to version 4.4, this same message was known as the Allocation message. Note in versions of FIX prior to version 4.4, the allocation message was also used to communicate fee and expense details from the Sellside to the Buyside.  This role has now been removed from the Allocation Instruction and is now performed by the new (to version 4.4) Allocation Report and Confirmation messages.,The  Allocation Report message should be used for the Sell-side Initiated Allocation role as defined in previous versions of the protocol.
        Note the response to the Allocation Instruction message is the Allocation Instruction Ack message. In versions of FIX prior to version 4.4, the Allocation Instruction Ack message was known as the Allocation ACK message.
      Allocation is typically communicated Post-Trade (after fills have been received and processed).  It can, however, also be communicated Pre-Trade (at the time the order is being placed) to specify the account(s) and their respective order quantities which make up the order.  This is a regulatory requirement in certain markets and for certain types of securities.
        In the context of bilateral (buyside to sellside) communication, the buyside firm should be the "Initiator" of an Allocation Instruction message and a Sellside firm would be the "Respondent". An Allocation Instruction message can be submitted with AllocTransType of new, cancel or replace.  The AllocType field indicates the type or purpose of the message:
      •	Calculated (includes MiscFees and NetMoney)
      •	Preliminary (without MiscFees and NetMoney)
      •	Ready-To-Book
      •	Warehouse instruction
      It is possible either to specify, in the AllocSettlInstType field, full settlement instruction details on the Allocation Instruction message, to provide a reference to a settlement instruction held on a database of such instructions or to instruct the receiving party to perform one of the following actions:
      •	Use default instructions
      •	Derive the instructions from the parameters of the trade
      •	Phone for instructions

        General guidelines applicable to this message:
      •	AllocID should be unique for all Allocation messages with AllocTransType=New.
      •	When submitting replace or cancel AllocTransType messages, the RefAllocID and AllocCancReplaceReason fields are required.
      •	To reject an Allocation Instruction message, an Allocation Instruction Ack with AllocStatus 'Block level reject' or 'Account level reject' should be used. Use of 'Block level reject' means the entire message has been rejected (e.g. due to one or more of the orders not matching, average price mismatch). 'Account level reject' is used when the block level matches successfully but one or more (or all) of the constituent account level details failed validation (e.g. account not found, incorrect MiscFees). In the latter case, the rejecting party can (optionally) notify the instructing party of those allocation details that are being rejected by listing the offending account IDs in the Allocation Instruction Ack message (a new NoAllocs repeating group has been introduced for this purpose).
      •	The correct response to an Allocation Instruction Ack of status 'Block level reject' is a new Allocation Instruction with AllocTransType 'New' (as the previous message has been rejected in entirety). In the case of an 'Account level reject', either the original Allocation Instruction should be cancelled (a new Allocation Instruction message referencing the original in RefAllocID, with AllocTransType 'Cancel') and reinstated (a second new Allocation Instruction message with AllocTransType 'New'), or fully replaced (a new Allocation Instruction, referencing the original in RefAllocID, with AllocTransType 'Replace'). Note a replacement allocation message (AllocTransType=Replace) must contain all data for the replacement allocation message. It is the responsibility of the recipient of the Replace message to identify which items have been changed.
      •	It is permissible (though not mandatory) for the Respondent to reject an Allocation Instruction with AllocTransType = Cancel or Replace if the Allocation Instruction ACK of status 'Accepted' has already been sent.  Manual communication would then be required to effect the required changes.  This approach would generally be required where the Respondent is using the generation of the 'Accepted' Allocation Instruction ACK to move the allocation details into downstream processing (e.g. confirmation generation), in which case a subsequent cancellation of or amendment to the allocation details may require the details to be retrieved from the downstream process.
      •	Where amendment or cancellation of an allocation instruction has taken place out of band (i.e. manually or via some other means outside FIX), an Allocation Report message can be sent from the recipient of the allocation/cancellation to confirm back to the initiator that the relevant action has taken place.
      •	Where settling in markets where multiple alternative settlement locations exist, it is recommended that the settlement location (equivalent to ISO15022 'PSET' field) be identified on each allocation detail within the NoAllocs repeating group. A nested parties component block is provided which can be used for this purpose.

        The allocation message contains repeating fields for each order, sub-account and individual execution.  The repeating fields are shown in the message definition below in typeface Bold-Italic and indented with the  → symbol.  The field’s relative position within the repeating group in the message is important.  For example, each instance of allocation must be in the order as shown in the message definition below.
      •	The total quantity allocated must equal the Quantity value*.  If present, the total quantity in the execution section must also be equal to this value. *Note that the total quantity of the allocation does not necessarily have to equal the total quantity of the orders being allocated. Good examples of where this does not necessarily take place are GT orders, especially where multi-day average pricing is taking place (refer to the 'Equities' section of Volume 7 for more details on these flows). The quantity of each order being booked must also be specified on the message. This will be equal to the order quantity if the entire order is being booked, though can be less if only part of the order is being booked. The sum of the order booking quantities must equal the Quantity value.
      •	The number of sub-account instances is indicated in NoAllocs.
      •	Multiple orders can be combined for allocation or for AllocType=" Ready-To-Book" or for AllocType = "Warehouse instruction".  Note that combined orders must refer to the same instrument and have the same trade date, settlement date and side.  The identification of the orders to be combined can be achieved in one of two ways:
      •	By identifying the number of orders in the NoOrders field and each individual order in the OrderID fields.  The AllocNoOrdersType field is used to denote that this is happening and takes value "1=Explicit list provided". If any orders were handled outside FIX, the ClOrdID must be set to 'MANUAL'. Regardless of whether the orders were handled within or outside FIX, the order quantity and average price must also be specified for each order. This is to assist in validating the message and, for manual orders, to help identify the correct orders to book.
      •	By stating that an unspecified group of orders is to be combined. The NoOrders field in this case is left blank. The AllocNoOrdersType field is set to "0=Not specified" to specify that this is happening. Note use of this approach is only recommended where either the number of orders being booked is extremely large or some kind of aggregation rule is being used.
      •	Multiple executions can be combined for allocation by identifying the number of executions in the NoExecs field and each individual execution in the ExecID fields. Combined executions must refer to the same instrument, trade date, settlement date and side.
      •	Except where AllocTransType = 'Cancel' or where AllocNoOrdersType = "Not specified", the list of orders being booked or allocated must be specified by using their ClOrdID. If any orders were handled outside FIX, the ClOrdID must be set to 'MANUAL'. Regardless of whether the orders were handled within or outside FIX, and where the orders are specified, the order quantity and average price must also be specified for each order. This is to assist in validating the message and, for manual orders, to help identify the correct orders to book.
      See “Example Usage of Allocations and Ready-to-Book” for more examples and details.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
P
    </MsgType>
    <Description>
      In versions of FIX prior to version 4.4, this message was known as the Allocation ACK message.
      The Allocation Instruction Ack message is used to acknowledge the receipt of and provide status for an Allocation Instruction message.
      The status is indicated by the AllocStatus field.
For an Allocation Instruction Ack message with AllocStatus of 'Accepted' in response to an Allocation Instruction with AllocType of ‘Calculated, it is recommended that the MatchStatus field be used to denote whether any financial details provided in the ‘Calculated’ Allocation Instruction were matched by the Respondent. If a match takes place and succeeds, then the match status will be '0-Compared and affirmed'. If the match takes place and fails, or no match takes place, then the match status will be '1-Uncompared or unaffirmed'.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BM
    </MsgType>
    <Description>
This message is used in a 3-party allocation model where notification of group creation and group updates to counterparites is needed.  The mssage will also carry trade information that comprised the group to the counterparites.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AS
    </MsgType>
    <Description>
      Sent from sell-side to buy-side, sell-side to 3rd-party or 3rd-party to buy-side, the Allocation Report (Claim) provides account breakdown of an order or set of orders plus any additional follow-up front-office information developed post-trade during the trade allocation, matching and calculation phase.  In versions of FIX prior to version 4.4, this functionality was provided through the Allocation message.  Depending on the needs of the market and the timing of “confirmed” status, the role of Allocation Report can be taken over in whole or in part by the Confirmation message.
      Note the response to the Allocation Report message is the Allocation Report Ack message. In versions of FIX prior to version 4.4, the Allocation ACK served this purpose.
      An Allocation Report message can be submitted with AllocReportType of
    •	Sellside Calculated Using Preliminary (includes Misc Fees, Accrued Interest and Net Money)
    •	Sellside Calculated Without Preliminary (includes Misc Fees, Accrued Interest and Net Money).  (AllocType=" Sellside Initiated"), i.e. where the allocations have been provided via some other mechanism or agreed earlier in the order process.
    •	Warehouse recap – sent unsolicited by sellside, used to communicate confirmation and current status of any warehoused position in a particular stock (see Volume 7 – PRODUCT:  EQUITIES for specific usage guidance on this topic)
	
    Settlement instructions are supported on the Allocation Report message to allow the Respondent (sell-side party or carry firm) to send an override of its own instructions to the Initiator.

      General guidelines applicable to this message:
    •	AllocReportID should be unique for all Allocation Report messages.
    •	To reject an Allocation Report message, an Allocation Report Ack with AllocStatus 'Block level reject' or 'Account level reject' should be used. Use of 'Block level reject' means the entire message has been rejected (e.g. net money mismatch). 'Account level reject' is used when the block level matches successfully but one or more (or all) of the constituent account level details fails validation (e.g. account not found, incorrect MiscFees). In the latter case, the rejecting party can (optionally) notify the instructing party of those allocation details that are being rejected by listing the offending account numbers in the Allocation Instruction Ack message.
    •	A rejected Allocation Report must be resolved out-of-band.
    •	Where settling in markets where multiple alternative settlement locations exist, it is recommended that the settlement location (equivalent to ISO15022 'PSET' field) be identified on each allocation detail within the NoAllocs repeating group. A nested parties component block is provided which can be used for this purpose.
      The allocation message contains repeating fields for each order, sub-account and individual execution.  The repeating fields are shown in the message definition below in typeface Bold-Italic and indented with the → symbol.  The field’s relative position within the repeating group in the message is important.  For example, each instance of allocation must be in the order as shown in the message definition below.
    •	The number of sub-account instances is indicated in NoAllocs.
    •	Multiple orders can be combined for allocation or for AllocType=" Ready-To-Book" or AllocType = "Warehouse instruction". Note that combined orders must refer to the same instrument and have the same trade date, settlement date and side. The identification of the orders to be combined can be achieved in one of two ways:
    •	By identifying the number of orders in the NoOrders field and each individual order in the OrderID fields.  The AllocNoOrdersType field is used to denote that this is happening and takes value "1=Explicit list provided". If any orders were handled outside FIX, the ClOrdID must be set to 'MANUAL'. Regardless of whether the orders were handled within or outside FIX, the order quantity and average price must also be specified for each order. This is to assist in validating the message and, for manual orders, to help identify the correct orders to book.
    •	By stating that an unspecified group of orders is to be combined. The NoOrders field in this case is left blank. The AllocNoOrdersType field is set to "0=Not specified" to specify that this is happening. Note use of this approach is only recommended where either the number of orders being booked is extremely large or some kind of aggregation rule is being used.
    •	Multiple executions can be combined for allocation by identifying the number of executions in the NoExecs field and each individual execution in the ExecID fields. Combined executions must refer to the same instrument, trade date, settlement date and side.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AT
    </MsgType>
    <Description>
      The Allocation Report Ack message is used to acknowledge the receipt of and provide status for an Allocation Report message.
      It is possible that multiple Allocation Report Ack messages can be generated for a single Allocation Report message to acknowledge the receipt and then to detail the acceptance or rejection of the Allocation Report message.
      It is recommended, when appropriate, that the MatchStatus field be used in the Allocation Report Ack to denote whether any financial details provided in the Allocation Report with AllocStatus of ‘Accepted’ were matched by the Initiator.  If a match takes place and succeeds, then the match status will be '0-Compared and affirmed'. If the match takes place and fails, or no match takes place, then the match status will be '1-Uncompared or unaffirmed'.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AK
    </MsgType>
    <Description>
      The Confirmation messages are used to provide individual trade level confirmations from the sell side to the buy side. In versions of FIX prior to version 4.4, this role was performed by the allocation message. Unlike the allocation message, the confirmation message operates at an allocation account (trade) level rather than block level, allowing for the affirmation or rejection of individual confirmations.
    This message is also used to report back, confirm or exception, the booking status of each allocation instance.  When the buy-side, in response, “affirms” with the ConfirmationAck message, the trade is ready to settle.
    Because each message reports the details of a single “ticket”, Account names, fees, net money, and settlement information are reported using fields designated for single-account trades.
    Every Confirmation message has a unique ConfirmID.  It is recommended that the sellside system trade reference be used as ConfirmID where possible, in order to enable the ConfirmID to be used as a mutually understood trade reference (e.g. for use in manual conversations regarding specific trades).
    The capacity or capacities of the firm executing the order or orders covered by this confirmation is represented in a repeating group. This is to support confirmations covering orders executed under more than one capacity (e.g. a mixture of agency and principal execution). The OrderCapacityQty field (inside this repeating group) gives the quantity executed under each OrderCapacity. The sum of the OrderCapacityQty values must equal the confirmation’s AllocQty (field 80).

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AU
    </MsgType>
    <Description>
	The Confirmation Ack (aka Affirmation) message is used to respond to a Confirmation message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BH
    </MsgType>
    <Description>
The Confirmation Request message is used to request a Confirmation message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
T
    </MsgType>
    <Description>
      The Settlement Instructions message provides the broker’s, the institution’s, or the intermediary’s instructions for trade settlement. This message has been designed so that it can be sent from the broker to the institution, from the institution to the broker, or from either to an independent “standing instructions” database or matching system or, for CIV, from an intermediary to a fund manager.
      The Settlement Instructions message can be used in one of three modes (SettlInstMode):
      1)	To provide “standing instructions” for the settlement of trades occurring in the future. The message could either be sent in an 'unsolicited' fashion (i.e. a 'push'-style update from one firm to that firm's counterparties) or in response to a Settlement Instruction Request message. In either of these scenarios, this message can provide multiple settlement instructions.
      2)	To reject a Settlement Instruction Request message (e.g. unable to process request, no matching settlement instructions found).
      3)	To provide settlement instructions for a specific Order with a single account either as overriding or standing instructions to support matching.  The ClOrdID field should be used to link the settlement instructions to the corresponding Order message.
      See VOLUME 7 - "PRODUCT: COLLECTIVE INVESTMENT VEHICLES"

      The Settlement Instruction detail can be either explicitly specified (via the SettlInstructionsData component block) or can exist within an independent standing instructions database and can be referenced via the StandInstDbType, StandInstDbName, and StandInstDbID fields.  See Volume 6 – Appendix 6-H for further details regarding the construction and formatting of settlement instruction details.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AV
    </MsgType>
    <Description>
      The Settlement Instruction Request message is used to request standing settlement instructions from another party. This could be:
      •	A buyside firm requesting standing instructions from a sellside firm.
      •	A sellside firm requesting standing instructions from a buyside firm.
      •	A sellside or buyside firm requesting standing instructions from a third party central static data database.
      •	A third party central static data database requesting standing instructions from a sellside or buyside firm.
      Settlement instructions can be requested for any combination of the following parameters (in addition to the party whose instructions are being requested):
      •	AllocAccount
      •	Country (of settlement)
      •	Side
      •	SecurityType (and/or CFI code)
      •	SettlCurrency
      •	SettlDeliveryType (i.e. DVP vs. FOP)
      •	EffectiveTime (i.e. all instructions valid at any time from this date/time)
      •	Expiry Time (i.e. all instructions valid until this date/time)
      •	Last update time (i.e. all instructions created or updated since this date/time)
      Alternatively, settlement instructions can be queried by reference to a database of standing instructions using the identifiers of that database as follows:
      •	Database id
      •	Database name
      •	Id of the settlement instructions on this database
      The response to such a request should be a Settlement Instruction message with SettlInstTransType "New" containing all SSIs meeting the criteria specified in the Settlement Instruction request. If the request cannot be processed, the request should be rejected with a Settlement Instruction message with SettlInstTransType "Request rejected". Similarly, if the request returns no data, the request should be rejected with a Settlement Instruction message with SettlInstTransType "No matching data found".

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BQ
    </MsgType>
    <Description>
      The Settlement Obligation Report message provides a central counterparty, institution, or individual counterparty with a capacity for reporting the final details of a currency settlement obligation. The settlement obligation is intended to be used for auxiliary reporting of settlement details that will be conducted over SWIFT or CLS in order to affect the instructions. The Settlement Obligation Report message is designed to allow multiple FX deals to be aggregated and netted into a single instruction to simplify the reporting process.
      The Settlement Obligation message can be used in one of two modes (SettlObligMode):
      1)	Preliminary – the instructions have been generated prior to final cutoff and information is still subject to change up until cutoff has been reached
      2)	Final – the instructions have been generated with final settlement information which cannot subsequently be changed for the current settlement period
      See VOLUME 7 - "PRODUCT: FOREIGN EXCHANGE" section for more detailed usage notes for this message type.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AD
    </MsgType>
    <Description>
      The Trade Capture Report Request can be used to:
      •	Request one or more trade capture reports based upon selection criteria provided on the trade capture report request
      •	Subscribe for trade capture reports based upon selection criteria provided on the trade capture report request.
      The following criteria can be specified on the Trade Capture Report Request:
      •	All trades matching specified trade identification: TradeReportID, SecondaryTradeReportID
      •	All trades matching specified trade types: TrdType, TrdSubType, TransferReason, SecondaryTrdType, TradeLinkID
      •	All trades matching the order identification information: OrderId, ClOrdID, ExecID
      •	Trades that have specified MatchStatus
      •	All trades for the party defined in the component block Parties
      o	This can be a trader id, firm, broker id, clearing firm
      •	All trades for a specific instrument, specified using the component block Instrument, the component block UnderlyingInstrument, and/or the component block InstrumentLeg.
      •	All unreported trades – Executions that have not been sent
      •	All unmatched trades – Trades that have not been matched
      •	All trades matching specific date and trading session criteria
      •	Trades entered via a specific TradeInputSource
      •	Trades entered via a specific TradeInputDevice
      •	All Advisories
      Each field in the Trade Capture Report Request (other than TradeRequestID and SubscriptionRequestType) identify filters - trade reports that satisfy all Specified filters will be returned. Note that the filters are combined using an implied "and" - a trade report must satisfy every specified filter to be returned.

      The optional date or time range-specific filter criteria (within NoDates repeating group) can be used in one of two modes:
      •	"Since" a time period.  NoDates=1 with first TradeDate (and optional TransactTime) indicating the "since" (greater than or equal to operation) point in time.
      •	"Between" time periods.  NoDates=2 with first TradeDate (and optional TransactTime) indicating the "beginning" (greater than or equal to operation) point in time and the second TradeDate (and optional TransactTime) indicating the "ending" (less than or equal to operation) point in time.

      Trade Capture Report messages are the normal return type to a Trade Capture Report Request.
      The response to a Trade Capture Report Request can be:
      •	One or more Trade Capture Reports
      •	A Trade Capture Report Request Ack followed by one or more Trade Capture Reports in two specific cases:
      o	When the Trade Capture Reports are being delivered out of band (such as a file transfer),
      o	When there is a processing delay between the time of the request and when the reports will be sent (for instance in a distributed trading environment where trades are distributed across multiple trading systems).
      •	A Trade Capture Report Ack only
      o	When no trades are found that match the selection criteria specified on the Trade Capture Report Request
      o	When the Trade Capture Report Request was deemed invalid for business reasons by the counterparty

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AQ
    </MsgType>
    <Description>
      The Trade Capture Request Ack message is used to:
      •	Provide an acknowledgement to a Trade Capture Report Request in the case where the Trade Capture Report Request is used to specify a subscription or delivery of reports via an out-of-band ResponseTransmissionMethod.
      •	Provide an acknowledgement to a Trade Capture Report Request in the case when the return of the Trade Capture Reports matching that request will be delayed or delivered asynchronously. This is useful in distributed trading system environments.
      •	Indicate that no trades were found that matched the selection criteria specified on the Trade Capture Report Request
      •	The Trade Capture Request was invalid for some business reason, such as request is not authorized, invalid or unknown instrument, party, trading session, etc.
      NOTE: A Trade Capture Report Request Ack is not required if one or more Trade Capture Reports will be returned in-band immediately.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AE
    </MsgType>
    <Description>
      The Trade Capture Report message can be:
      •	Used to report trades between counterparties.
      •	Used to report trades to a trade matching system
      •	Can be sent unsolicited between counterparties.
      •	Sent as a reply to a Trade Capture Report Request.
      •	Can be used to report unmatched and matched trades.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AR
    </MsgType>
    <Description>
      The Trade Capture Report Ack message can be:
      •	Used to acknowledge trade capture reports received from a counterparty
      •	Used to reject a trade capture report received from a counterparty

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
o
    </MsgType>
    <Description>
      The Registration Instructions message type may be used by institutions or retail intermediaries wishing to electronically submit registration information to a broker or fund manager (for CIV) for an order or for an allocation.
      A Registration Instructions message can be submitted as new, cancel or replace.  The RegistTransType field indicates the purpose of the message.  When submitting replace or cancel RegistTransType messages the RegistRefID field is required.  Replacement Registration Instructions messages must contain all data for the replacement registration.
      See VOLUME 7 - "PRODUCT: COLLECTIVE INVESTMENT VEHICLES"

      The Registration Instructions message contains repeating fields for each of several joint registrants.  The number of registration details instances is indicated in NoRegistDtls.  The repeating fields are shown in the message definition below in typeface Bold-Italic and indented with the → symbol.  The field’s relative position within the repeating group in the message is important.  For example, each instance of registration must be in the order as shown in the message definition below.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
p
    </MsgType>
    <Description>
      The Registration Instructions Response message type may be used by broker or fund manager (for CIV) in response to a Registration Instructions message submitted by an institution or retail intermediary for an order or for an allocation.
      The Registration Instructions Response message is used to:
      1.	confirm the receipt of a Registration Instructions message
      2.	confirm changes to an existing Registration Instructions message (i.e. accept cancel and replace requests)
      3.	relay Registration Instructions status information
      4.	relay assigned client and account Ids for Registration Instructions messages with RegTransType=New
      5.	reject Registration Instructions message
      Each Registration Instructions Response message contains a RegistStatus field which is used to communicate the current state of the Registration Instructions as understood by the broker or fund manager.  The Registration Instruction statuses are as follows (in highest to lowest precedence):
      Accepted
      Rejected
      Held

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AL
    </MsgType>
    <Description>
      The Position Maintenance Request message allows the position owner to submit requests to the holder of a position which will result in a specific action being taken which will affect the position. Generally, the holder of the position is a central counter party or clearing organization but can also be a party providing investment services. Submission of a request may result in the following:
      -	adjustement of both the long and short start of day position quantity
      -	exercise of an option position into a position in the instrument underlying the option
      -	abandonment of an option position that would otherwise exercise
      -	netting of current day trades to change to the end of day long and short position
      -	spreading of a position against other position in order to reduce margin requirements
      -	pledge of a position for collateral purposes
      -	large trader submission of the long and short quantities

      The request may be submitted as either new, replace or cancel and may refer to a specific position or the previously submitted message. The request is always submitted as of a Clearing Business Date and is therefore required. The parties both owning and holding the position are specified in the parties block.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AM
    </MsgType>
    <Description>
The Position Maintenance Report message is sent by the holder of a positon in response to a Position Maintenance Request and is used to confirm that a request has been successfully processed or rejected.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AN
    </MsgType>
    <Description>
      The Request For Positions message is used by the owner of a position to request a Position Report from the holder of the position, usually the central counter party or clearing organization. The request can be made at several levels of granualarity.
      -	Position Report only
      -	Positions and related Trades
      -	Exercises only
      -	Assignments only
      -	Settlements activity

      The message can be used to request a one time snapshot of positions or to subscribe to updates as they occur using the SubscriptionRequestType (tag 263). The ResponseTransportType (tag 725) can be used to specify if the reports are to be sent inband over the session transport or out-of-band of band over an alternative transport such as FTP.

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AO
    </MsgType>
    <Description>
The Request for Positions Ack message is returned by the holder of the position in response to a Request for Positions message. The purpose of the message is to acknowledge that a request has been received and is being processed.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AP
    </MsgType>
    <Description>
The Position Report message is returned by the holder of a position in response to a Request for Position message. The purpose of the message is to report all aspects of a position and may be provided on a standing basis to report end of day positions to an owner.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BL
    </MsgType>
    <Description>
Used to report changes in position, primarily in equity options, due to modifications to the underlying due to corporate actions
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AW
    </MsgType>
    <Description>
      Assignment Reports are sent from a clearing house to counterparties, such as a clearing firm as a result of the assignment process.Communication Scenarios
      Assignment Report can be sent unsolicited from the clearing house to a clearing firm.
      Assignment Report can be returned in response to a Request for Positions message with a PosReqType(tag 724) set to 3 (Assignment).

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BO
    </MsgType>
    <Description>
The Contrary Intention Report is used for reporting of contrary expiration quantities for Saturday expiring options.  This information is required by options exchanges for regulatory purposes.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AX
    </MsgType>
    <Description>
An initiator that requires collateral from a respondent sends a Collateral Request. The initiator can be either counterparty to a trade in a two party model or an intermediary such as an ATS or clearinghouse in a three party model. A Collateral Assignment is expected as a response to a request for collateral.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AY
    </MsgType>
    <Description>
      Used to assign collateral to cover a trading position. This message can be sent unsolicited or in reply to a Collateral Request message.
      The Collateral Assignment message can be used to perform the following:
      •	Assign initial collateral
      •	Replace collateral

    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
AZ
    </MsgType>
    <Description>
Used to respond to a Collateral Assignment message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BA
    </MsgType>
    <Description>
Used to report collateral status when responding to a Collateral Inquiry message.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BB
    </MsgType>
    <Description>
Used to inquire for collateral status.
    </Description>
  </MessageDesc>
  <MessageDesc>
    <MsgType>
BG
    </MsgType>
    <Description>
      Used to respond to a Collateral Inquiry in the following situations:
      •	When the CollateralInquiry will result in an out of band response (such as a file transfer).
      •	When the inquiry is otherwise valid but no collateral is found to match the criteria specified on the Collateral Inquiry message.
      •	When the Collateral Inquiry is invalid based upon the business rules of the counterparty.

    </Description>
  </MessageDesc>
</dataroot>
        