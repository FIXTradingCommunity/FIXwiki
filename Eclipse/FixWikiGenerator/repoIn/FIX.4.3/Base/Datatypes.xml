<?xml version="1.0" encoding="UTF-8"?>
<Datatypes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" copyright="Copyright (c) FIX Protocol Ltd. All Rights Reserved." edition="2010" version="FIX.4.3" xsi:noNamespaceSchemaLocation="../../schema/Datatypes.xsd" generated="2010-03-13T14:54:02-05:00">
	<Datatype added="FIX.2.7">
		<Name>int</Name>
		<Description>Sequence of digits without commas or decimals and optional sign character (ASCII characters "-" and "0" - "9" ). The sign character utilizes one byte (i.e. positive int is "99999" while negative int is "-99999"). Note that int values may contain leading zeros (e.g. "00023" = "23").
Examples:
723 in field 21 would be mapped int as |21=723|.
-723 in field 12 would be mapped int as |12=-723|</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>Length</Name>
		<BaseType>int</BaseType>
		<Description>int field representing the length in bytes. Value must be positive.</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>NumInGroup</Name>
		<BaseType>int</BaseType>
		<Description>int field representing the number of entries in a repeating group. Value must be positive.</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>TagNum</Name>
		<BaseType>int</BaseType>
		<Description>int field representing a field's tag number when using FIX "Tag=Value" syntax. Value must be positive and may not contain leading zeros.</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>SeqNum</Name>
		<BaseType>int</BaseType>
		<Description>int field representing a message sequence number. Value must be positive.</Description>
	</Datatype>
	<Datatype added="FIX.2.7">
		<Name>float</Name>
		<Description>Sequence of digits with optional decimal point and sign character (ASCII characters "-", "0" - "9" and "."); the absence of the decimal point within the string will be interpreted as the float representation of an integer value. All float fields must accommodate up to fifteen significant digits. The number of decimal places used should be a factor of business/market needs and mutual agreement between counterparties. Note that float values may contain leading zeros (e.g. "00023.23" = "23.23") and may contain or omit trailing zeros after the decimal point (e.g. "23.0" = "23.0000" = "23").</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>Qty</Name>
		<BaseType>float</BaseType>
		<Description>float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>Price</Name>
		<BaseType>float</BaseType>
		<Description>float field representing a price. Note the number of decimal places may vary.</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>PriceOffset</Name>
		<BaseType>float</BaseType>
		<Description>float field representing a price offset, which can be mathematically added to a "Price". Note the number of decimal places may vary and some fields such as LastForwardPoints may be negative.</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>Amt</Name>
		<BaseType>float</BaseType>
		<Description>float field typically representing a Price times a Qty</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>Percentage</Name>
		<BaseType>float</BaseType>
		<Description>float field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.</Description>
	</Datatype>
	<Datatype added="FIX.2.7">
		<Name>char</Name>
		<Description>Single character value, can include any alphanumeric character or punctuation except the delimiter. All char fields are case sensitive (i.e. m != M).</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>String</Name>
		<Description>Alpha-numeric free format strings, can include any character or punctuation except the delimiter. All String fields are case sensitive.</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>MultipleStringValue</Name>
		<BaseType>String</BaseType>
		<Description>String field containing one or more space delimited values</Description>
	</Datatype>
	<Datatype added="FIX.4.3">
		<Name>Country</Name>
		<BaseType>String</BaseType>
		<Description>String field representing a country using ISO 3166 Country code (2 character) values (see Appendix 6-B).</Description>
	</Datatype>	
	<Datatype added="FIX.4.2">
		<Name>Currency</Name>
		<BaseType>String</BaseType>
		<Description>String field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>Exchange</Name>
		<BaseType>String</BaseType>
		<Description>string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see Appendix 6-C).</Description>
	</Datatype>
	<Datatype added="FIX.4.1">
		<Name>MonthYear</Name>
		<BaseType>String</BaseType>
		<Description>String field representing month of a year in YYYYMM format. Valid values: YYYY = 0000-9999, MM = 01-12.</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>UTCTimestamp</Name>
		<BaseType>String</BaseType>
		<Description>Time/date combination represented in UTC (Universal Time Coordinated, also known as "GMT") in either YYYYMMDD-HH:MM:SS (whole seconds) or YYYYMMDD-HH:MM:SS.sss (milliseconds) format, colons, dash, and period required.
Valid values:
* YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second) (without milliseconds).
* YYYY = 0000-9999, MM = 01-12, DD = 01-31, HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss=000-999 (indicating milliseconds).</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>UTCTimeOnly</Name>
		<BaseType>String</BaseType>
		<Description>Time-only represented in UTC (Universal Time Coordinated, also known as "GMT") in either HH:MM:SS (whole seconds) or HH:MM:SS.sss (milliseconds) format, colons, and period required.
Valid values:
* HH = 00-23, MM = 00-60 (60 only if UTC leap second), SS = 00-59. (without milliseconds)
* HH = 00-23, MM = 00-59, SS = 00-60 (60 only if UTC leap second), sss=000-999 (indicating milliseconds).</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>LocalMktDate</Name>
		<BaseType>String</BaseType>
		<Description>Date of Local Market (vs. UTC) in YYYYMMDD format. Valid values: YYYY = 0000-9999, MM = 01-12, DD = 01-31.</Description>
	</Datatype>
	<Datatype added="FIX.4.2">
		<Name>UTCDate</Name>
		<BaseType>String</BaseType>
		<Description>Date represented in UTC (Universal Time Coordinated, also known as "GMT") in YYYYMMDD format. Valid values: YYYY = 0000-9999, MM = 01-12, DD = 01-31.</Description>
	</Datatype>
	<Datatype added="FIX.2.7">
		<Name>data</Name>
		<BaseType>String</BaseType>
		<Description>Raw data with no format or content restrictions. Data fields are always immediately preceded by a length field. The length field should specify the number of bytes of the value of the data field (up to but not including the terminating SOH). Caution: the value of one of these fields may contain the delimiter (SOH) character. Note that the value specified for this field should be followed by the delimiter (SOH) character as all fields are terminated with an "SOH".</Description>
	</Datatype>
</Datatypes>